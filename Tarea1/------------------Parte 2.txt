------------------Parte 2

archivo.dat
N que indica la cantidad de cartas en la baraja (52) seguido 
de n naipes ingleses (n, es decir 52, structs de naipes)

formato struct:
int numero (1 a 13); char palo (Pica, Corazón, Diamante y Trebol);
char color (rojo CD, negro PT)

Se busca realizar distintas jugadas con la baraja creada.
poker (P): 2 a 7 jugadores, 1 baraja. Cada uno recibe 5 naipes.
canasta (C): 2 a 6 jugadores, 2 barajas. Cada uno recibe 15 naipes.
brisca (B): 2 a 6 jugadores, 1 baraja. Cada uno recibe 4 naipes.

Debe preguntar la cantidad de jugadores.
Se debe crear un archivo de texto cuyo nombre serpa el tipo de juego.
Cada linea del archivo debe representar el juego de cada participante.
Cada número representa el n° de naipe que es. No se pueden repetir entre
jugadores a menos que se consideren dos masos.

pseudocodigoo
1. leer archivo binario.
----- abrir archivo
----- leer archivo (file.read(char*)&n; sizeof(int)) (file.read(char*)&arr_n; sizeof(int)*n)
----- cerrar archivo.
listo

2. Barajar.
----- teniendo una vez todos las cartas en el archivo, se van a barajar
(funcion Barajar)
listo

2.1
------forma1
Se crea un arreglo nuevo de tamaño n, donde se hara un ciclo,,, por cada 
posicion del arreglo nuevo se escogerá una random del arreglo anterior. 
Antes de guardarlo en la posicion, se preguntará si es que ya existe en el 
arreglo. En el caso de hacerlo, se vuelve a escoger un numero random.
----- forma2
en cada jugada, ir escogiendo cartas aleatorias e ir buscando si es que 
están o no en uso.

3. funcion TipoJugada.
----- Dependiendo de la jugada, reparte las cartas. Por cada jugador se 
usa una linea de archivo. Se crea un archivo cuyo nombre sea la cantidad de 
jugadores y el tipo de jugada. Cada linea corresponde a un jugador.

Arreglo de tamaño dinámico, donde se guardarán las cartas que ya fueron utilizadas.
(solo para juego P y B). 
juego Canasta:
Pueden repetirse las cartas hasta dos veces, por lo que hay que hacer un contador
para verificar cuantas veces existe 


Crear archivo de texto.
Ciclo for para cada linea. Cada linea corresponde a un jugador.
Cada vez que se complete la cantidad de cartas se hace un salto de linea. 
Por cada salto de linea se tendrá un contador, esto va a indicar la cantidad
de jugadores que hay. (while i < jugadores)


----- borrar memoria dinámica.
----- imprimir por salida estandar la cantidad de cartas rojas y negras en 
el juego. (se ve con el struct)


Ejemplo de ejecución:

Ingrese Juego (P, C o B):
P
Ingrese cantidad de jugadores:
4
Cantidad de cartas Rojas: 9
Cantidad de cartas Negras: 11
Un ejemplo del archivo de texto ',P4.txt’, creado según la ejecución anterior es el siguiente:
11 17 5 10 42
24 20 31 9 36
49 47 39 43 45
44 25 12 50 32
